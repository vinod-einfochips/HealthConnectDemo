name: Test and Build

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          
      - name: Run Unit Tests
        run: ./gradlew testDevDebugUnitTest --stacktrace
        continue-on-error: true
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            app/build/reports/tests/
            app/build/test-results/
          retention-days: 30
          
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        continue-on-error: true
        with:
          report_paths: '**/build/test-results/test*/*.xml'
          check_name: Unit Test Results
          require_tests: false
          
  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          
      - name: Run Lint
        run: ./gradlew lintDevDebug --stacktrace
        continue-on-error: true
        
      - name: Upload Lint Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results
          path: app/build/reports/lint-results-*.html
          retention-days: 30
          
  ktlint:
    name: Run ktlint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          
      - name: Run ktlint format (auto-fix)
        run: ./gradlew ktlintFormat --stacktrace
        continue-on-error: true
          
      - name: Run ktlint check
        run: ./gradlew ktlintCheck --stacktrace
        continue-on-error: true
        
      - name: Upload ktlint Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ktlint-results
          path: app/build/reports/ktlint/
          retention-days: 30
          
  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [test, lint, ktlint]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          
      - name: Determine Build Flavor
        id: flavor
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "flavor=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/qa" ]]; then
            echo "flavor=qa" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "flavor=prod" >> $GITHUB_OUTPUT
          else
            echo "flavor=dev" >> $GITHUB_OUTPUT
          fi
          
      - name: Build APK
        run: |
          FLAVOR_CAP=$(echo ${{ steps.flavor.outputs.flavor }} | sed 's/./\U&/')
          ./gradlew assemble${FLAVOR_CAP}Debug --stacktrace
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.flavor.outputs.flavor }}-debug-apk
          path: app/build/outputs/apk/${{ steps.flavor.outputs.flavor }}/debug/*.apk
          retention-days: 30
          
      - name: Create Build Summary
        run: |
          echo "### Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Flavor:** ${{ steps.flavor.outputs.flavor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Author:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f app/build/outputs/apk/${{ steps.flavor.outputs.flavor }}/debug/*.apk ]; then
            APK_SIZE=$(du -h app/build/outputs/apk/${{ steps.flavor.outputs.flavor }}/debug/*.apk | cut -f1)
            echo "**APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
