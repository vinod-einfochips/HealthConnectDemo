name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

jobs:
  release:
    name: Create Release Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          
      - name: Build Release APKs
        run: |
          ./gradlew assembleDevRelease --stacktrace
          ./gradlew assembleQaRelease --stacktrace
          ./gradlew assembleProdRelease --stacktrace
          
      - name: Sign APKs (if keystore available)
        if: ${{ secrets.KEYSTORE_FILE != '' }}
        run: |
          echo "Signing APKs..."
          # Add signing logic here if needed
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Dev Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/dev/release/app-dev-release.apk
          asset_name: health-connect-demo-dev-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Upload QA Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/qa/release/app-qa-release.apk
          asset_name: health-connect-demo-qa-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Upload Prod Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/prod/release/app-prod-release.apk
          asset_name: health-connect-demo-prod-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Create Release Notes
        run: |
          echo "### Release Information" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Artifacts:**" >> $GITHUB_STEP_SUMMARY
          echo "- Dev Release APK" >> $GITHUB_STEP_SUMMARY
          echo "- QA Release APK" >> $GITHUB_STEP_SUMMARY
          echo "- Prod Release APK" >> $GITHUB_STEP_SUMMARY
